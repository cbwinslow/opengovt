name: Automated Test Generation
on:
  push:
    branches: [ main, develop, testing-suite ]
    paths:
      - 'frontend/src/**'
      - 'src/**'
      - 'test-generator.js'
  pull_request:
    branches: [ main, develop, testing-suite ]
    paths:
      - 'frontend/src/**'
      - 'src/**'
      - 'test-generator.js'

jobs:
  generate-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate tests
        run: npm run generate-tests

      - name: Check for test changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "Tests were updated or new tests were generated"
            echo "has_changes=true" >> $GITHUB_OUTPUT
            git diff --name-only
          else
            echo "No test changes detected"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Run generated tests
        run: npm test

      - name: Commit test updates (if any)
        if: steps.verify-changed-files.outputs.has_changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "ðŸ¤– Auto-generated tests update

Generated by GitHub Actions test generation workflow
- Updated existing tests
- Added new tests for new components/pages
- Verified all tests pass" || echo "No changes to commit"

      - name: Push test updates
        if: steps.verify-changed-files.outputs.has_changes == 'true'
        run: git push

  test-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
        test-type: ['frontend', 'backend']
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ${{ matrix.test-type }} tests
        run: npm run test:${{ matrix.test-type }}

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        if: matrix.node-version == '18' && matrix.test-type == 'frontend'
        with:
          file: ./coverage/lcov.info
          flags: ${{ matrix.test-type }}