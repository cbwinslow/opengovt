name: 🏪 GitHub Marketplace Integrations

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM
  workflow_dispatch:

permissions:
  contents: read

jobs:
  codecov-coverage:
    name: Code Coverage (Codecov)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci || npm install

      - name: Run tests with coverage
        run: npm test -- --coverage || true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  codefactor-analysis:
    name: Code Quality (CodeFactor)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: CodeFactor
        uses: codefactor-io/codefactor-action@v1
        with:
          token: ${{ secrets.CODEFACTOR_TOKEN }}
          continue-on-error: true

  sonarcloud-scan:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=cbwinslow_opengovt
            -Dsonar.organization=cbwinslow
            -Dsonar.sources=.
            -Dsonar.exclusions=node_modules/**,dist/**,build/**,.venv/**

  deepsource-analysis:
    name: DeepSource Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Report to DeepSource
        uses: deepsourcelabs/test-coverage-action@master
        with:
          key: python
          coverage-file: coverage.xml
          dsn: ${{ secrets.DEEPSOURCE_DSN }}

  stale-issues:
    name: Close Stale Issues
    runs-on: ubuntu-latest
    permissions:
      contents: read

    jobs:
      stale-issues:
        permissions:
          issues: write
          pull-requests: write
      pull-requests: write
    steps:
      - uses: actions/stale@v8
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          stale-issue-message: 'This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs.'
          stale-pr-message: 'This PR has been automatically marked as stale because it has not had recent activity.'
          days-before-stale: 60
          days-before-close: 7
          stale-issue-label: 'stale'
          stale-pr-label: 'stale'

  auto-label:
    name: Auto Label PRs
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/labeler@v4
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/labeler.yml

  pr-size-labeler:
    name: PR Size Labeler
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: codelytv/pr-size-labeler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          xs_label: 'size/xs'
          xs_max_size: 10
          s_label: 'size/s'
          s_max_size: 100
          m_label: 'size/m'
          m_max_size: 500
          l_label: 'size/l'
          l_max_size: 1000
          xl_label: 'size/xl'

  todo-to-issue:
    name: TODO to Issue
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: TODO to Issue
        uses: alstr/todo-to-issue-action@v4
        with:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CLOSE_ISSUES: true

  compressed-size:
    name: Check Compressed Size
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - name: Compressed Size
        uses: preactjs/compressed-size-action@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  lighthouse-ci:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci || npm install

      - name: Build
        run: npm run build || echo "No build script"

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:8787
          uploadArtifacts: true
          temporaryPublicStorage: true

  bundle-analyzer:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Analyze bundle size
        uses: andresz1/size-limit-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  pull-request-comment:
    name: PR Comment with Stats
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ## 🤖 Automated Checks Complete
            
            Your pull request has been analyzed by our automated systems:
            
            ✅ Code quality checks
            ✅ Security scans
            ✅ Dependency analysis
            ✅ Performance tests
            
            Check the workflow runs for detailed results.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  auto-assign-reviewer:
    name: Auto Assign Reviewers
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: kentaro-m/auto-assign-action@v1.2.5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  welcome-first-contribution:
    name: Welcome First Time Contributors
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'issues'
    steps:
      - uses: actions/first-interaction@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          issue-message: |
            👋 Thanks for opening your first issue! We appreciate your contribution and will get back to you soon.
          pr-message: |
            🎉 Thanks for opening your first pull request! We'll review it as soon as possible.

  label-commenter:
    name: Comment on Label
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' || github.event_name == 'pull_request'
    steps:
      - uses: peaceiris/actions-label-commenter@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  issue-metrics:
    name: Issue Metrics
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - uses: github/issue-metrics@v2
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SEARCH_QUERY: 'repo:cbwinslow/opengovt is:issue created:>2024-01-01'

  contributor-stats:
    name: Contributor Statistics
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate contributor stats
        run: |
          echo "# Contributor Statistics" > contributor-stats.md
          echo "" >> contributor-stats.md
          echo "## Top Contributors (by commits)" >> contributor-stats.md
          git log --format='%aN' | sort | uniq -c | sort -rn | head -10 >> contributor-stats.md

      - name: Upload stats
        uses: actions/upload-artifact@v4
        with:
          name: contributor-statistics
          path: contributor-stats.md

  auto-merge-dependabot:
    name: Auto-merge Dependabot PRs
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge for Dependabot PRs
        if: steps.metadata.outputs.update-type == 'version-update:semver-patch'
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  repo-visualizer:
    name: Repository Visualization
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Generate visualization
        uses: githubocto/repo-visualizer@main
        with:
          output_file: "images/diagram.svg"
          excluded_paths: "node_modules,dist,build,.venv"
