name: 🔐 Advanced Secrets Scanning

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 6 * * 3'  # Weekly on Wednesday at 6 AM
  workflow_dispatch:

permissions:
  contents: read

jobs:
  trufflehog-scan:
    name: TruffleHog Secrets Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  gitleaks-scan:
    name: Gitleaks Secrets Detection
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

  detect-secrets:
    name: Detect-Secrets Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install detect-secrets
        run: pip install detect-secrets

      - name: Run detect-secrets
        run: |
          detect-secrets scan --all-files --force-use-all-plugins \
            --baseline .secrets.baseline \
            --exclude-files 'node_modules/.*' \
            --exclude-files '\.git/.*' \
            --exclude-files '.*\.lock' || true

      - name: Audit baseline
        run: |
          if [ -f .secrets.baseline ]; then
            detect-secrets audit .secrets.baseline || true
          fi

  gitguardian-scan:
    name: GitGuardian Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: GitGuardian scan
        uses: GitGuardian/ggshield-action@master
        continue-on-error: true
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

  custom-secret-patterns:
    name: Custom Secret Patterns Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check for common secret patterns
        run: |
          echo "Checking for common secret patterns..."
          
          # Database connection strings
          if grep -r -E 'mongodb://.*:.*@|postgresql://.*:.*@|mysql://.*:.*@' . --exclude-dir={node_modules,.git,dist,build} 2>/dev/null; then
            echo "⚠️  Warning: Found potential database connection strings"
          fi
          
          # AWS keys
          if grep -r -E 'AKIA[0-9A-Z]{16}' . --exclude-dir={node_modules,.git,dist,build} 2>/dev/null; then
            echo "⚠️  Warning: Found potential AWS access key"
          fi
          
          # API keys in environment files
          if grep -r -E 'API_KEY|API_SECRET|PRIVATE_KEY' .env* 2>/dev/null; then
            echo "⚠️  Warning: Found potential API keys in .env files (ensure .env files are in .gitignore)"
          fi
          
          # Private keys
          if grep -r 'BEGIN.*PRIVATE KEY' . --exclude-dir={node_modules,.git,dist,build} 2>/dev/null; then
            echo "⚠️  Warning: Found potential private keys"
          fi
          
          # JWT tokens
          if grep -r -E 'eyJ[a-zA-Z0-9_-]{10,}\.[a-zA-Z0-9_-]{10,}\.[a-zA-Z0-9_-]{10,}' . --exclude-dir={node_modules,.git,dist,build} 2>/dev/null; then
            echo "⚠️  Warning: Found potential JWT tokens"
          fi
          
          echo "Secret scanning complete"

  report-secrets-summary:
    name: Generate Secrets Scan Summary
    runs-on: ubuntu-latest
    needs: [trufflehog-scan, gitleaks-scan, detect-secrets, custom-secret-patterns]
    if: always()
    steps:
      - name: Create summary
        run: |
          echo "# 🔐 Secrets Scanning Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All secret scanning jobs completed. Review individual job results for details." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Scans Performed:" >> $GITHUB_STEP_SUMMARY
          echo "- ✓ TruffleHog OSS" >> $GITHUB_STEP_SUMMARY
          echo "- ✓ Gitleaks" >> $GITHUB_STEP_SUMMARY
          echo "- ✓ Detect-Secrets" >> $GITHUB_STEP_SUMMARY
          echo "- ✓ GitGuardian" >> $GITHUB_STEP_SUMMARY
          echo "- ✓ Custom Pattern Matching" >> $GITHUB_STEP_SUMMARY
